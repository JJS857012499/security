spring:
  application:
    name: center
---
spring:
  profiles: peer1                                 # 指定profile=peer1
server:
  port: 8761
eureka:
  instance:
    hostname: peer1                               # 指定当profile=peer1时，主机名
    instance-id: ${spring.application.name}:${server.port}
    prefer-ip-address: true # 神坑，由于是部署在同一台服务，注册中心总是莫名被踢出
    ip-address: 127.0.0.1
  client:
    fetch-registry: false
    register-with-eureka: false
    serviceUrl:
      defaultZone: http://peer2:8762/eureka/ # 将自己注册到peer2这个Eureka上面去

---
spring:
  profiles: peer2
server:
  port: 8762
eureka:
  instance:
    hostname: peer2
    instance-id: ${spring.application.name}:${server.port}
    prefer-ip-address: true
    ip-address: 127.0.0.1
  client:
    fetch-registry: false
    register-with-eureka: false
    serviceUrl:
      defaultZone: http://peer1:8761/eureka/